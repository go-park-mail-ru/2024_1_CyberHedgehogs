{
    "swagger": "2.0",
    "info": {
        "description": "API Server for Patreon like Application",
        "title": "Saudade API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:3031",
    "basePath": "/",
    "paths": {
        "/login": {
            "post": {
                "description": "Login with user credentials",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login",
                "parameters": [{
                    "description": "User credentials",
                    "name": "request",
                    "in": "body",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/repository.User"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully logged in",
                        "schema": {
                            "$ref": "#/definitions/repository.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid JSON format",
                        "schema": {
                            "$ref": "#/definitions/repository.Response"
                        }
                    },
                    "401": {
                        "description": "Wrong credentials",
                        "schema": {
                            "$ref": "#/definitions/repository.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/repository.Response"
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "description": "Logout user and delete session",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Logout",
                "parameters": [{
                    "type": "string",
                    "description": "Session ID",
                    "name": "session_id",
                    "in": "header",
                    "required": true
                }],
                "responses": {
                    "204": {
                        "description": "Session deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/repository.Response"
                        }
                    },
                    "400": {
                        "description": "No cookie provided",
                        "schema": {
                            "$ref": "#/definitions/repository.Response"
                        }
                    },
                    "500": {
                        "description": "Error deleting session",
                        "schema": {
                            "$ref": "#/definitions/repository.Response"
                        }
                    }
                }
            }
        },
        "/posts": {
            "get": {
                "description": "Get posts created by the authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get user posts",
                "parameters": [{
                    "type": "string",
                    "description": "Session ID",
                    "name": "session_id",
                    "in": "header",
                    "required": true
                }],
                "responses": {
                    "200": {
                        "description": "User posts retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/repository.Response"
                        }
                    },
                    "400": {
                        "description": "No cookie provided",
                        "schema": {
                            "$ref": "#/definitions/repository.Response"
                        }
                    },
                    "401": {
                        "description": "Session not found",
                        "schema": {
                            "$ref": "#/definitions/repository.Response"
                        }
                    }
                }
            }
        },
        "/profile": {
            "get": {
                "description": "Get user profile information based on session ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get user profile",
                "parameters": [{
                    "type": "string",
                    "description": "Session ID",
                    "name": "session_id",
                    "in": "header",
                    "required": true
                }],
                "responses": {
                    "200": {
                        "description": "User profile retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/repository.Response"
                        }
                    },
                    "400": {
                        "description": "No cookie provided",
                        "schema": {
                            "$ref": "#/definitions/repository.Response"
                        }
                    },
                    "401": {
                        "description": "Session not found",
                        "schema": {
                            "$ref": "#/definitions/repository.Response"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Create a new user account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Registration",
                "operationId": "create-account",
                "parameters": [{
                    "description": "User information",
                    "name": "user",
                    "in": "body",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/repository.User"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Account successfully created",
                        "schema": {
                            "$ref": "#/definitions/repository.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/repository.Response"
                        }
                    },
                    "500": {
                        "description": "Adding user error",
                        "schema": {
                            "$ref": "#/definitions/repository.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "repository.Response": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "ok": {
                    "type": "boolean"
                },
                "result": {}
            }
        },
        "repository.User": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    }
}